let emitters = [];

function setup() {
  createCanvas(600, 400);
  // Make 3 emitters at fixed spots
  emitters.push(new Emitter(100, 200));
  emitters.push(new Emitter(300, 200));
  emitters.push(new Emitter(500, 200));
}

function draw() {
  background(0);

  for (let e of emitters) {
    e.emit();
    e.update();
    e.show();
  }
}

// Base Particle class — simple circle
class Particle {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.speedX = random(-1, 1);
    this.speedY = random(-2, -0.5);
    this.size = 8;
    this.lifetime = 255;
  }

  update() {
    this.x += this.speedX;
    this.y += this.speedY;
    this.lifetime -= 4;
  }

  isDead() {
    return this.lifetime <= 0;
  }

  show() {
    noStroke();
    fill(200, 200, 255, this.lifetime);
    ellipse(this.x, this.y, this.size);
  }
}

// First extension — a sparkling star shape particle
class StarParticle extends Particle {
  constructor(x, y) {
    super(x, y);
    this.size = 10;
    this.color = color(255, 215, 0, this.lifetime); // golden yellow
  }

  show() {
    push();
    translate(this.x, this.y);
    rotate(frameCount / 20);
    noStroke();
    fill(255, 215, 0, this.lifetime);
    star(0, 0, this.size / 2, this.size, 5);
    pop();
  }
}

// Helper function to draw a star shape
function star(x, y, radius1, radius2, npoints) {
  let angle = TWO_PI / npoints;
  let halfAngle = angle / 2.0;
  beginShape();
  for (let a = 0; a < TWO_PI; a += angle) {
    let sx = x + cos(a) * radius2;
    let sy = y + sin(a) * radius2;
    vertex(sx, sy);
    sx = x + cos(a + halfAngle) * radius1;
    sy = y + sin(a + halfAngle) * radius1;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

// Second extension — a small square particle with a nice color
class SquareParticle extends Particle {
  constructor(x, y) {
    super(x, y);
    this.size = 8;
  }

  show() {
    noStroke();
    fill(100, 200, 255, this.lifetime);
    rectMode(CENTER);
    rect(this.x, this.y, this.size, this.size);
  }
}

// Emitter class, updated to choose particle type randomly
class Emitter {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.particles = [];
  }

  emit() {
    // Pick randomly between the three particle types
    let r = random();
    if (r < 0.33) {
      this.particles.push(new Particle(this.x, this.y));
    } else if (r < 0.66) {
      this.particles.push(new StarParticle(this.x, this.y));
    } else {
      this.particles.push(new SquareParticle(this.x, this.y));
    }
  }

  update() {
    for (let i = this.particles.length - 1; i >= 0; i--) {
      this.particles[i].update();
      if (this.particles[i].isDead()) {
        this.particles.splice(i, 1);
      }
    }
  }

  show() {
    for (let p of this.particles) {
      p.show();
    }
  }
}

